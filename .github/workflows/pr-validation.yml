name: Pull Request Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: ./.github/actions/setup-helm

      - name: Validate Chart Version
        id: version_check
        run: |
          # Get the current version from Chart.yaml
          CURRENT_VERSION=$(grep '^version:' Chart.yaml | awk '{print $2}')
          echo "current_version=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"
          
          # Check if version follows semantic versioning
          if [[ ! $CURRENT_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9-]+)?(\+[a-zA-Z0-9-]+)?$ ]]; then
            echo "❌ Chart version $CURRENT_VERSION does not follow semantic versioning"
            exit 1
          fi
          
          echo "✅ Chart version $CURRENT_VERSION is valid"

      - name: Check for breaking changes
        run: |
          # Compare with main branch to detect potential breaking changes
          git fetch origin main
          
          # Check if any template files were modified
          if git diff --name-only origin/main...HEAD | grep -E '^templates/.*\.tpl$'; then
            echo "🔍 Template files modified - manual review recommended"
            echo "::warning::Template files have been modified. Please ensure backward compatibility."
          fi
          
          # Check if Chart.yaml dependencies changed
          if git diff origin/main...HEAD Chart.yaml | grep -E '^\+.*version:|^\-.*version:'; then
            echo "🔍 Dependencies modified"
            echo "::warning::Chart dependencies have been modified. Please ensure compatibility."
          fi

      - name: Validate and lint chart
        run: |
          echo "🔍 Validating chart structure and dependencies..."
          helm dependency update
          helm lint .
          echo "✅ Chart validation completed"

      - name: Check template syntax
        run: |
          echo "🔍 Checking template syntax..."
          # Verify all template helpers are properly defined
          for helper in $(grep -o 'common\.itsumi\.[a-zA-Z_.]*' README.md | sort -u); do
            echo "Checking helper: $helper"
            if ! grep -r "$helper" templates/; then
              echo "❌ Helper $helper mentioned in README but not found in templates"
              exit 1
            fi
          done
          echo "✅ Template syntax validation passed"

      - name: Generate test report
        run: |
          echo "## 📊 Chart Validation Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Validations Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Chart version format is valid" >> $GITHUB_STEP_SUMMARY
          echo "- Chart linting passed" >> $GITHUB_STEP_SUMMARY
          echo "- Template syntax validation passed" >> $GITHUB_STEP_SUMMARY
          echo "- All template helpers are properly defined" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Chart Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: \`${{ steps.version_check.outputs.current_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Type**: Library Chart" >> $GITHUB_STEP_SUMMARY
          echo "- **Dependencies**: Bitnami Common Library" >> $GITHUB_STEP_SUMMARY
