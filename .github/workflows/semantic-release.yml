name: Semantic Release

on:
  push:
    branches: [main, master]

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install semantic-release
        run: |
          npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/exec

      - name: Set up Helm
        uses: ./.github/actions/setup-helm

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.actor }}
        run: semantic-release

      - name: Validate published chart
        if: success()
        run: |
          # Get the version from Chart.yaml
          VERSION="$(awk '/^version:/{print $2}' Chart.yaml)"

          # Only run validation if we have a version
          if [[ -z "$VERSION" ]]; then
            echo "‚ÑπÔ∏è No version found in Chart.yaml"
            exit 1
          fi

          echo "üîç Validating published chart version: $VERSION"
          CHART_URL="oci://ghcr.io/${{ github.repository_owner }}/common.itsumi"

          echo "üîç Testing chart pull from GHCR..."
          helm pull "${CHART_URL}" --version "${VERSION}"

          echo "üì¶ Extracting and validating chart..."
          tar -tf "common.itsumi-${VERSION}.tgz" | head -10

          echo "üîç Validating chart structure..."
          helm show chart "${CHART_URL}" --version "${VERSION}"

          echo "üìã Displaying chart values..."
          helm show values "${CHART_URL}" --version "${VERSION}"

          echo "‚úÖ Chart $VERSION successfully validated!"
          echo "‚úÖ Pull from GHCR registry works correctly"
          echo "‚úÖ Chart structure and metadata are valid"
