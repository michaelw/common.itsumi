# Default values for {@ chart_name @}.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count
# For more information check out: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image
# For more information check out: https://kubernetes.io/docs/concepts/containers/images/
{%- if global_registry %}
global:
  imageRegistry: "{@ global_registry @}"
{%- else %}
# global:
#   imageRegistry: "registry.example.com"
{%- endif %}

image:
{%- set image_parts = image_repository.split('/') %}
{%- set registry = '' %}
{%- set repo = image_repository %}
{%- if image_parts|length > 1 and ('.' in image_parts[0] or ':' in image_parts[0]) %}
  {%- set registry = image_parts[0] %}
  {%- set repo = image_parts[1:] | join('/') %}
{%- endif %}
{%- if registry %}
  registry: "{@ registry @}"
{%- endif %}
  repository: "{@ repo @}"
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "{@ image_tag @}"

# This is for the secrets for pulling an image from a private repository
# For more information check out: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account
# For more information check out: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information check out: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information check out: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ports:
  http:
    # This is the port that the container will listen on.
    containerPort: 8080

# This is for setting up a service
# For more information check out: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type
  # For more information check out: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports
  # For more information check out: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  ports:
    http:
      port: 80
      targetPort: http
      protocol: TCP

# This block is for setting up the ingress for
# For more information check out: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress: {}
  # enabled: false
  # className: ""
  # annotations: {}
  #   # kubernetes.io/ingress.class: nginx
  #   # kubernetes.io/tls-acme: "true"
  # hosts:
  #   - host: chart-example.local
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls: []
  # #  - secretName: chart-example-tls
  # #    hosts:
  # #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes
# For more information check out: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

initContainers: {}
  # Example init container
  # wait-for-migration:
  #   inheritFrom: default
  #   command: ["bundle", "exec", "rake", "db:abort_if_pending_migrations"]
  #   env:
  #     RAILS_ENV: "production"
  #   resources:
  #     requests:
  #       cpu: 100m
  #       memory: 128Mi

jobs: {}
  # Example job configuration
  # migration:
  #   inheritFrom: default
  #   labels:
  #     job.type: "migration"
  #   command: ["bundle", "exec", "rake", "db:migrate"]
  #   restartPolicy: "Never"
  #   backoffLimit: 3
  #   ttlSecondsAfterFinished: 3600
  #   env:
  #     RAILS_ENV: "production"
  #   resources:
  #     requests:
  #       cpu: 100m
  #       memory: 128Mi
